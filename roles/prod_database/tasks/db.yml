- name: Update apt-get repo and cache
  ansible.builtin.apt:
    update_cache: true
    force_apt_get: true
    cache_valid_time: 3600

- name: Install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - postgresql
    - python3-psycopg2

- name: Set timezone to Prague
  community.general.timezone:
    name: Europe/Prague

- name: Create db directory
  ansible.builtin.file:
    path: "{{ prod_database_path }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create prod_database_password
  ansible.builtin.set_fact:
    prod_database_password: "{{ lookup('community.general.random_string', length=12, special=false, digits=true, letters=true) }}"
- name: Print prod_database_password
  ansible.builtin.debug:
    msg: "Database password: {{ prod_database_password }}"

- name: Save prod_database_password to remote host
  ansible.builtin.copy:
    content: "{{ prod_database_password }}"
    dest: "{{ prod_database_path }}/db_pass"
    mode: "0644"
    owner: root
    group: root

- name: Copy docker-compose.yml
  ansible.builtin.template:
    src: "docker-compose.yml.j2"
    dest: "{{ prod_database_path }}/docker-compose.yml"
    mode: "0644"
    owner: root
    group: root

- name: Disable postgresql service
  ansible.builtin.systemd:
    name: postgresql
    enabled: false
    state: stopped

- name: Run docker-compose
  ansible.builtin.command:
    cmd: "docker compose up -d"
    chdir: "{{ prod_database_path }}"
  changed_when: false

- name: Copy backup service
  ansible.builtin.template:
    src: "backup_db.service.j2"
    dest: "/etc/systemd/system/backup_db.service"
    mode: "0644"
    owner: root
    group: root

- name: Copy backup script
  ansible.builtin.copy:
    src: "backup_db.sh"
    dest: "{{ prod_database_path }}/backup_db.sh"
    mode: "0755"
    owner: root
    group: root

- name: Copy backup timer service
  ansible.builtin.template:
    src: "backup_db.timer.j2"
    dest: "/etc/systemd/system/backup_db.timer"
    mode: "0644"
    owner: root
    group: root

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start backup_db.timer
  ansible.builtin.systemd:
    name: backup_db.timer
    enabled: true
    state: started

- name: Wait for the database to start on port 5432
  ansible.builtin.wait_for:
    port: 5432
